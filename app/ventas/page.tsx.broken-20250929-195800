"use client";

/** Safe text helper: evita React #130 (objeto como hijo) */
const t = (x:any) => {
  if (x == null || x === false) return "";
  const ty = typeof x;
  if (ty === "string" || ty === "number") return String(x);
  if (ty === "boolean") return x ? "true" : "false";
  const c:any = x;
  if (typeof c?.nombre === "string") return c.nombre;
  if (typeof c?.name   === "string") return c.name;
  if (typeof c?.label  === "string") return c.label;
  if (typeof c?.title  === "string") return c.title;
  try { return JSON.stringify(x); } catch { return "[object]"; }
};
export type HeldCart = {
  items: Array<{ id: string; name: string; price: number; qty: number }>;
  note?: string;
  savedAt: string; // ISO
};

const KEY = "superjuampy.pos.heldCart";

export function saveHeldCart(cart: HeldCart) {
  try { localStorage.setItem(KEY, JSON.stringify(cart)); } catch {}
}

export function getHeldCart(): HeldCart | null {
  try {
    const raw = localStorage.getItem(KEY);
    if (!raw) return null;
    return JSON.parse(raw) as HeldCart;
  } catch { return null; }
}

export function clearHeldCart() {
  try { localStorage.removeItem(KEY); } catch {}
}



